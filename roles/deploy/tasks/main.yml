---
- name: Stop tomcat server
  service: 
    name: tomcat 
    state: stopped

- name: Make sure the site is exist in server.xml
  blockinfile: 
    dest: /usr/share/tomcat/conf/server.xml
    insertbefore: '</Engine>'
    marker: "# {mark} {{ server_hostname }} with ansible"
    content: |
        <Host name="{{ server_hostname }}" appBase="/sites/tomcat" unpackWARs="true" autoDeploy="true">
          <Context path="" docBase="sagiller" reloadable="true" />
        </Host>

- name: remove old version package direcoty
  file: path={{ tomcat_webapps_path }}/sagiller/ state=absent

- name: remove old version package
  file: path={{ tomcat_webapps_path }}/sagiller.war state=absent

- name: Copy war file to webapps directory
  copy: src={{ sagiller_war_path }}/sagiller.war dest={{ tomcat_webapps_path }}/sagiller.war
  ignore_errors: yes
- name: start tomcat server
  service: 
    name: tomcat 
    state: restarted

- name: Copy nginx configuration for tomcat
  template: 
    src: domain.conf 
    dest: /etc/nginx/conf.d/{{ tomcat_hostname }}.conf
  vars:
    hostname: "{{ tomcat_hostname }}"
    http_port: "{{ tomcat_http_port }}"
  notify: restart nginx

- name: Copy nginx configuration for jenkins
  template: 
    src: domain.conf 
    dest: /etc/nginx/conf.d/{{ jenkins_hostname }}.conf
  vars:
    hostname: "{{ jenkins_hostname }}"
    http_port: "{{ jenkins_http_port }}"
  notify: restart nginx

- name: Copy nginx configuration for {{ server_hostname }}
  template: 
    src: domain.conf 
    dest: /etc/nginx/conf.d/{{ server_hostname }}.conf
  vars:
    hostname: "{{ server_hostname }}"
    http_port: "{{ tomcat_http_port }}"
  notify: restart nginx